// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBookStore.Infrastructure.Context;

#nullable disable

namespace MyBookStore.Infrastructure.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    partial class BookStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyBookStore.Domain.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b10897b3-9922-4766-af8b-0578eb3b62dd"),
                            Created = new DateTime(2022, 9, 16, 18, 31, 40, 106, DateTimeKind.Local).AddTicks(7857),
                            IsDeleted = false,
                            Name = "Stephen John"
                        },
                        new
                        {
                            Id = new Guid("94cb215c-c1fa-4e64-8329-e056b205989c"),
                            Created = new DateTime(2022, 9, 16, 18, 31, 40, 106, DateTimeKind.Local).AddTicks(7859),
                            IsDeleted = false,
                            Name = "John Jake"
                        },
                        new
                        {
                            Id = new Guid("ef808cbd-16ac-464a-9be3-59faaa84e411"),
                            Created = new DateTime(2022, 9, 16, 18, 31, 40, 106, DateTimeKind.Local).AddTicks(7860),
                            IsDeleted = false,
                            Name = "Paul Samuel"
                        },
                        new
                        {
                            Id = new Guid("b7a7a273-acd3-45ce-a861-179343e88384"),
                            Created = new DateTime(2022, 9, 16, 18, 31, 40, 106, DateTimeKind.Local).AddTicks(7872),
                            IsDeleted = false,
                            Name = "Barry Mark"
                        });
                });

            modelBuilder.Entity("MyBookStore.Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("MyBookStore.Domain.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b334f51-4d03-4eba-a572-bccc0cb441dd"),
                            Created = new DateTime(2022, 9, 16, 18, 31, 40, 106, DateTimeKind.Local).AddTicks(7729),
                            IsDeleted = false,
                            Name = "MichaelLuke"
                        },
                        new
                        {
                            Id = new Guid("25775c65-c715-43e4-ab3a-b6f8b821e786"),
                            Created = new DateTime(2022, 9, 16, 18, 31, 40, 106, DateTimeKind.Local).AddTicks(7784),
                            IsDeleted = false,
                            Name = "BrianKay"
                        },
                        new
                        {
                            Id = new Guid("e1dfbacd-94b8-4e99-8b83-fb566024d7d1"),
                            Created = new DateTime(2022, 9, 16, 18, 31, 40, 106, DateTimeKind.Local).AddTicks(7785),
                            IsDeleted = false,
                            Name = "NeoLake"
                        },
                        new
                        {
                            Id = new Guid("2284e13d-f7b6-4d3e-9b68-b8e1a9fe2016"),
                            Created = new DateTime(2022, 9, 16, 18, 31, 40, 106, DateTimeKind.Local).AddTicks(7786),
                            IsDeleted = false,
                            Name = "HammerRio"
                        });
                });

            modelBuilder.Entity("MyBookStore.Domain.Entities.Book", b =>
                {
                    b.HasOne("MyBookStore.Domain.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyBookStore.Domain.Entities.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("MyBookStore.Domain.Entities.Validators.Entities.ValueObjects.Publication", "Publication", b1 =>
                        {
                            b1.Property<Guid>("BookId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Edition")
                                .HasColumnType("int")
                                .HasColumnName("Edition");

                            b1.Property<int>("Year")
                                .HasColumnType("int")
                                .HasColumnName("Year");

                            b1.HasKey("BookId");

                            b1.ToTable("Book");

                            b1.WithOwner()
                                .HasForeignKey("BookId");
                        });

                    b.Navigation("Author");

                    b.Navigation("Publication")
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("MyBookStore.Domain.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("MyBookStore.Domain.Entities.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
